<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjl.basic.zone.project.user.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.cjl.basic.zone.project.user.domain.User">
        <id column="account_id" jdbcType="INTEGER" property="accountId"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="avatar" jdbcType="INTEGER" property="avatar"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="activated" jdbcType="CHAR" property="activated"/>
        <result column="login_ip" jdbcType="VARCHAR" property="loginIp"/>
        <result column="login_date" jdbcType="TIMESTAMP" property="loginTime"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
        <result column="home_url" jdbcType="VARCHAR" property="homeUrl"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectUserVo">
         select    account_id,
                   user_name,
                   email,
                   home_url,
                   login_time,
                   activated,
                   logged,
                   group_name,
                   login_name,
                   phonenumber,
                   del_flag,
                   sex,
                   avatar
            from z_users
    </sql>
    <sql id="UserVo">
         select zu.account_id,
                zu.user_name,
                zu.avatar,
                zu.sex,
                zu.password,
                zu.email,
                zu.home_url,
                zu.login_time,
                zu.activated,
                zu.salt,
                zu.group_name,
                zu.login_name
        from z_users zu
    </sql>
    <select id="selectUserList" resultMap="UserResultMap">
        <include refid="selectUserVo"/>
        <where>
            del_flag = 0
            <if test="loginName != null">
                and login_name like concat('%',#{loginName,jdbcType=VARCHAR},'%')
            </if>
            <if test="userName != null">
                and user_name =like concat('%', #{userName,jdbcType=VARCHAR},'%')
            </if>
            <if test="email != null">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="phonenumber != null">
                and phonenumber = #{phonenumber,jdbcType=VARCHAR}
            </if>
            <if test="sex != null">
                and sex = #{sex,jdbcType=CHAR}
            </if>
        </where>
    </select>

    <update id="updateUser" parameterType="com.cjl.basic.zone.project.user.domain.User">
        update z_users
        <trim prefix="SET" suffixOverrides=",">
            <if test="loginName != null  and loginName != ''  ">login_name = #{loginName},</if>
            <if test="userName != null  and userName != ''  ">user_name = #{userName},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="activated != null ">activated = #{activated},</if>
            <if test="phonenumber != null  and phonenumber != ''  ">phonenumber = #{phonenumber},</if>
            <if test="sex != null  and sex != ''  ">sex = #{sex},</if>
            <if test="homeUrl != null  and homeUrl != ''  ">home_url = #{homeUrl},</if>
            <if test="avatar != null  ">avatar = #{avatar},</if>
            <if test="password != null  and password != ''  ">password = #{password},</if>
            <if test="loginIp != null  and loginIp != ''  ">login_ip = #{loginIp},</if>
            <if test="loginTime != null  ">login_time = #{loginTime},</if>
            <if test="delFlag != null  and delFlag != ''  ">del_flag = #{delFlag},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
        </trim>
        <where>
            <if test="accountId != null and accountId !='' ">and account_id=#{accountId}</if>
            <if test="loginName != null and loginName !='' ">and login_name=#{loginName}</if>
        </where>
    </update>
    <update id="deleteUserByIds">
        update z_users
        set del_flag   = 1,
            update_by=#{updateBy},
            update_time=#{date}
        where find_in_set(account_id, #{ids,jdbcType=VARCHAR})
    </update>
    <delete id="deleteuser">
        delete
        from mfrs_account
        where find_in_set(account_id, #{ids,jdbcType=VARCHAR})
    </delete>
    <select id="checkRegisterExist" resultMap="UserResultMap">
        select login_time,email from z_users
        where
        del_flag=0
        <if test="loginName !=null and loginName !=''">
            AND login_name=#{loginName}
        </if>
        <if test="email !=null and email !=''">
            OR email=#{email}
        </if>
    </select>

    <select id="selectUserById2" resultMap="UserResultMap">
        <include refid="selectUserVo"/>
        <where>
            and account_id = #{accountId,jdbcType=INTEGER}
            and del_flag = 0
        </where>
    </select>
    <select id="selectUserDeptRoleByUserName" resultMap="UserResultMap">
        <include refid="UserVo"/>
        <where>
            and (zu.login_name = #{userName,jdbcType=VARCHAR} or zu.phonenumber = #{userName,jdbcType=VARCHAR}) and
            zu.del_flag = 0
        </where>
    </select>

    <select id="checkLoginNameUnique" resultType="integer">
        select count(*)
        from mfrs_login_info
        where status != 2
          and login_name = #{loginName,jdbcType=VARCHAR}
    </select>

    <select id="checkPhoneUnique" resultType="integer">
        select count(*)
        from mfrs_account
        where phonenumber = #{phonenumber}
          and del_flag = 0
          and status != 2
    </select>

    <update id="updateUserSelf" parameterType="com.cjl.basic.zone.project.user.domain.User">
        update mfrs_account
        <trim prefix="SET" suffixOverrides=",">
            <if test="loginIp != null  and loginIp != ''  ">login_ip = #{loginIp},</if>
            <if test="loginDate != null  ">login_date = #{loginDate},</if>
            <if test="remark != null  and remark != ''  ">remark = #{remark},</if>
            <if test="mfrsId != null  ">mfrs_id = #{mfrsId},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
            birthday = #{birthday},
            <if test="qq != null  ">QQ = #{qq},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="sex != null  and sex != ''  ">sex = #{sex},</if>
            <if test="password != null  and password != ''  ">password = #{password},</if>
            <if test="salt != null  and salt != ''  ">salt = #{salt},</if>
            <if test="status != null  and status != ''  ">status = #{status},</if>
        </trim>
        where account_id = #{accountId}
    </update>


    <insert id="insertUser" parameterType="com.cjl.basic.zone.project.user.domain.User" useGeneratedKeys="true"
            keyProperty="accountId" keyColumn="account_id">
        insert into z_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="homeurl != null">
                homeUrl,
            </if>
            <if test="loginTime != null">
                login_time,
            </if>
            <if test="activated != null">
                activated,
            </if>
            <if test="groupName != null">
                group_name,
            </if>
            <if test="loginName != null">
                login_name,
            </if>
            <if test="phonenumber != null">
                phonenumber,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null and updateBy != ''">update_by,</if>
            <if test="updateTime != null">update_time</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="homeurl != null">
                #{homeurl,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=INTEGER},
            </if>
            <if test="activated != null">
                #{activated,jdbcType=INTEGER},
            </if>
            <if test="groupName != null">
                #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="phonenumber != null">
                #{phonenumber,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime}</if>
        </trim>
    </insert>

    <select id="checkResetPwdUnique" resultMap="UserResultMap">
        select login_name,password,salt from mfrs_account
        <where>
            del_flag = '0'
            <if test="accountId != null and accountId !='' ">and account_id=#{accountId}</if>
        </where>
    </select>

    <select id="hasSuperAdmin" resultType="integer">
        select count(*)
        from mfrs_account
        where 2 >= user_type
          and find_in_set(account_id, #{ids})
    </select>
    <select id="checkLoginNameUniqueInMfrs" resultType="java.lang.Integer">
        select count(*)
        from mfrs_account
        where status = 2
          and del_flag = 0
          and login_name = #{loginName}
          and mfrs_id = #{mfrsId}
    </select>

    <select id="selectUserByPhoneNumber" resultMap="UserResultMap">
        <include refid="selectUserVo"/>
        <where>
            and phonenumber = #{userName,jdbcType=VARCHAR} and del_flag = 0 and status != 2
        </where>
    </select>

    <select id="selectUserDeptRoleByAccountId" resultMap="UserResultMap">
        <include refid="UserVo"/>
        <where>
            and zu.account_id = #{accountId,jdbcType=VARCHAR} and zu.status != 2
        </where>
    </select>
</mapper>
