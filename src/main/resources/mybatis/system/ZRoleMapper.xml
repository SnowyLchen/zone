<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjl.basic.zone.project.manage.role.mapper.ZRoleMapper">
    <resultMap id="BaseResultMap" type="com.cjl.basic.zone.project.manage.role.domain.ZRole">
        <id column="z_role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="z_role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="z_role_key" jdbcType="VARCHAR" property="roleKey"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
    z_role_id, z_role_name, z_role_key, del_flag, create_by, create_time, update_by, remark,
    update_time, `status`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from z_role
        where z_role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <select id="selectRoleList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from z_role
        <where>del_flag=0
            <if test="roleName !=null and roleName != ''">
                AND z_role_name like concat('%',#{roleName},'%')
            </if>
            <if test="roleKey !=null and roleKey != ''">
                AND z_role_key like concat('%',#{roleKey},'%')
            </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey">
        update z_role set del_flag=1
        <where>
            z_role_id = #{zRoleIds}
        </where>
    </delete>

    <insert id="insertSelective" keyColumn="z_role_id" keyProperty="zRoleId"
            parameterType="com.cjl.basic.zone.project.manage.role.domain.ZRole" useGeneratedKeys="true">
        insert into z_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleName != null">
                z_role_name,
            </if>
            <if test="roleKey != null">
                z_role_key,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="remark != null">
                `remark`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleKey != null">
                #{roleKey,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cjl.basic.zone.project.manage.role.domain.ZRole">
        update z_role
        <set>
            <if test="roleName != null">
                z_role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleKey != null">
                z_role_key = #{roleKey,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=CHAR},
            </if>
            <if test="remark != null">
                `remark` = #{remark,jdbcType=CHAR},
            </if>
        </set>
        where z_role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <delete id="deleteRoleMenu">
        delete from z_role_menu
        where role_id=#{roleId}
    </delete>
    <delete id="insertRoleMenu">
        insert into z_role_menu(role_id,menu_id)
        values(#{roleId},#{menuId})
    </delete>
</mapper>